{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fullStack","React","createRef","lastConfidence","cards","fetchingMembers","after","POST_LIMIT","LOWER_COUNT","requestId","componentDidUpdate","console","log","current","children","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","value","id","state","stack","includes","createCard","push","err","return","handleClick","members","length","shift","key","setState","fetchPosts","dragEnd","el","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","target","attributes","attr","localName","lity","textContent","fetch","concat","then","response","json","data","parsePosts","postList","posts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","p","post","_p$data","stickied","subreddit","num_comments","url","distinguished","thumbnail","title","isImage","match","imgUrl","handleThrowEnd","throwDirection","shuffle","a","i","j","Math","floor","random","_ref","_this2","react_default","createElement","className","style","display","react_swing_default","setStack","throwout","bind","dragend","config","allowedDirections","ReactSwing","DIRECTION","LEFT","RIGHT","throwOutConfidence","xOffset","yOffset","xConfidence","min","abs","offsetWidth","yConfidence","offsetHeight","max","ref","data-lity-target","data-lity-desc","backgroundColor","background","backgroundSize","flexDirection","justifyContent","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.396a824e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactSwing  from 'react-swing';\nimport './App.css';\nimport lity from 'lity';\n\nclass App extends Component {\n  fullStack = React.createRef();\n  lastConfidence = 0;\n  cards = [];\n  fetchingMembers = false;\n  after = null;\n  POST_LIMIT = 12;\n  LOWER_COUNT = 5;\n  requestId = 0;\n\n  constructor(props) {\n    super(props);\n    this.state  = {\n      members: [],\n      stack: null\n    };\n  }\n\n  componentDidUpdate = () => {\n    console.log(this.fullStack);\n\n    if (this.fullStack === null || this.fullStack.current === null) {\n      return;\n    }\n\n      const children = [...this.fullStack.current.children]; //create a copy before running getCard\n      for (let element of children) {\n        console.log(element.id);\n        if (element && element.id && this.state.stack && !this.cards.includes(element.id)) {\n          console.log('Stackifying element ' + element.id);\n          this.state.stack.createCard(element, true);\n          this.cards.push(element.id);\n        }\n      }\n  }\n\n  componentDidMount() {\n    this.fetchPosts();\n  }\n\n  \n  handleClick = (id) => {\n    console.log('handleClick',id);\n\n    var { members } = this.state;\n    if (members.length <= 0) { return; }\n    console.log('mem',members);\n    console.log('removigin',members.shift().key);\n    this.setState({members});\n    this.fetchPosts();\n  }\n\n  dragEnd = (el) => {\n    console.log(el);\n    if (!this.lastConfidence)\n    {\n      for (let attr of el.target.attributes) {\n        if (attr.localName === \"data-lity-target\") {\n          lity(attr.textContent,{},el.target);\n        }\n      }\n    }\n  }\n  \n\n  fetchPosts = () => {\n    console.log('fetchPosts??? ', this.state.members.length);\n    if (this.state.members.length > this.LOWER_COUNT || this.fetchingMembers) {\n      return;\n    }\n    console.log('frethcing data pospotspop??? ', this.state.members.length);\n\n    this.fetchingMembers = true;\n    this.requestId++;\n    fetch('https://www.reddit.com/r/aww/.json?limit='\n        +this.POST_LIMIT+(this.after !== null ? `&after=${this.after}` : ''))\n      .then(response => response.json())\n      .then(data => {\n        console.log('data',data);\n        this.after = data.data.after;\n        if (data.data.children) {\n          console.log('children', data.data.children);\n          this.parsePosts(data.data.children);\n          this.fetchingMembers = false;\n          this.fetchPosts();\n        }\n      });\n  }\n\n  parsePosts = (postList) => {\n    let posts = [];\n\n    for (let p of postList) {\n      let post = {};\n      const { stickied, subreddit, num_comments, id, url, distinguished, thumbnail, title } = p.data;\n      const isImage = url.match(/\\.(jpeg|png|gif|jpg)$/) != null;\n      //console.log('post',id,title,isImage);\n\n      if (stickied || distinguished === 'moderator' ||\n        !isImage || thumbnail === 'self') {\n          continue;\n      }\n      \n      post.title = title;\n      post.id = id;\n      post.key = `render-${id}-${this.requestId}`;\n      post.imgUrl = url;\n      post.thumbnail = thumbnail;\n      post.num_comments = num_comments;\n      post.subreddit = subreddit;\n      posts.push(post);\n    }\n\n    this.setState({members: [...this.state.members, ...posts]});\n  }\n\n\n  handleThrowEnd = (el) => {\n      this.handleClick(el.target.id,el.throwDirection);\n  }\n \n  shuffle = (a) => {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <div id=\"viewport\">\n            <p>{console.log(this.state.members)}</p>\n            {this.state.members  && this.state.members.length > 2 &&\n              //'linear-gradient(to bottom,hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.009) 18.3%,hsla(0, 0%, 0%, 0.036) 33.5%,hsla(0, 0%, 0%, 0.077) 45.8%,hsla(0, 0%, 0%, 0.13) 55.7%,hsla(0, 0%, 0%, 0.194) 63.5%,hsla(0, 0%, 0%, 0.264) 69.5%,hsla(0, 0%, 0%, 0.34) 74%,hsla(0, 0%, 0%, 0.418) 77.5%,hsla(0, 0%, 0%, 0.497) 80.2%,hsla(0, 0%, 0%, 0.574) 82.5%,hsla(0, 0%, 0%, 0.646) 84.8%,hsla(0, 0%, 0%, 0.711) 87.3%,hsla(0, 0%, 0%, 0.766) 90.4%,hsla(0, 0%, 0%, 0.81) 94.6%,hsla(0, 0%, 0%, 0.84) 100%),' +\n              //'linear-gradient(to top,hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.009) 18.3%,hsla(0, 0%, 0%, 0.036) 33.5%,hsla(0, 0%, 0%, 0.077) 45.8%,hsla(0, 0%, 0%, 0.13) 55.7%,hsla(0, 0%, 0%, 0.194) 63.5%,hsla(0, 0%, 0%, 0.264) 69.5%,hsla(0, 0%, 0%, 0.34) 74%,hsla(0, 0%, 0%, 0.418) 77.5%,hsla(0, 0%, 0%, 0.497) 80.2%,hsla(0, 0%, 0%, 0.574) 82.5%,hsla(0, 0%, 0%, 0.646) 84.8%,hsla(0, 0%, 0%, 0.711) 87.3%,hsla(0, 0%, 0%, 0.766) 90.4%,hsla(0, 0%, 0%, 0.81) 94.6%,hsla(0, 0%, 0%, 0.84) 100%),' +\n              //'linear-gradient(to bottom,hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.004) 18.7%,hsla(0, 0%, 0%, 0.015) 34.9%,hsla(0, 0%, 0%, 0.034) 48.7%,hsla(0, 0%, 0%, 0.06) 60.4%,hsla(0, 0%, 0%, 0.094) 70.1%,hsla(0, 0%, 0%, 0.135) 78.1%,hsla(0, 0%, 0%, 0.184) 84.5%,hsla(0, 0%, 0%, 0.241) 89.4%,hsla(0, 0%, 0%, 0.305) 93.2%,hsla(0, 0%, 0%, 0.377) 95.9%,hsla(0, 0%, 0%, 0.456) 97.7%,hsla(0, 0%, 0%, 0.543) 98.8%,hsla(0, 0%, 0%, 0.638) 99.5%,hsla(0, 0%, 0%, 0.74) 99.8%,hsla(0, 0%, 0%, 0.85) 100%),' +\n              //'linear-gradient(to top,hsla(0, 0%, 0%, 0) 0%,hsla(0, 0%, 0%, 0.004) 18.7%,hsla(0, 0%, 0%, 0.015) 34.9%,hsla(0, 0%, 0%, 0.034) 48.7%,hsla(0, 0%, 0%, 0.06) 60.4%,hsla(0, 0%, 0%, 0.094) 70.1%,hsla(0, 0%, 0%, 0.135) 78.1%,hsla(0, 0%, 0%, 0.184) 84.5%,hsla(0, 0%, 0%, 0.241) 89.4%,hsla(0, 0%, 0%, 0.305) 93.2%,hsla(0, 0%, 0%, 0.377) 95.9%,hsla(0, 0%, 0%, 0.456) 97.7%,hsla(0, 0%, 0%, 0.543) 98.8%,hsla(0, 0%, 0%, 0.638) 99.5%,hsla(0, 0%, 0%, 0.74) 99.8%,hsla(0, 0%, 0%, 0.85) 100%),' +\n            <div style={{display: 'contents'}}>\n              <ReactSwing\n                style={{display: 'none'}}\n                setStack={stack => this.setState({ stack: stack })}\n                throwout={this.handleThrowEnd.bind(this)}\n                dragend={this.dragEnd.bind(this)}\n                config={{\n                  allowedDirections: [ReactSwing.DIRECTION.LEFT, ReactSwing.DIRECTION.RIGHT],\n                  throwOutConfidence: (xOffset, yOffset, element) => {\n                    const xConfidence = Math.min(Math.abs(xOffset) / element.offsetWidth / 0.5, 1);\n                    const yConfidence = Math.min(Math.abs(yOffset) / element.offsetHeight, 1);\n                \n                    this.lastConfidence = Math.max(xConfidence, yConfidence);\n                    return this.lastConfidence;\n                  }\n                }}\n              >\n              <div style={{display:'none'}}></div>\n          </ReactSwing>\n          <div ref={this.fullStack} className=\"stack\">\n                  <div className=\"card\" id={this.state.members[0].key} key={this.state.members[0].key}\n                    data-lity-target={this.state.members[0].imgUrl}\n                    data-lity-desc={'\" data-lity-close junk=\"'}\n                    style={{\n                      backgroundColor: 'gray',\n                      background:\n                          'url(\"' + this.state.members[0].imgUrl + '\") no-repeat center center',\n                      backgroundSize: 'cover',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'space-between',\n                    }}\n                  >\n                  </div>\n                  <div className=\"card\" id={this.state.members[1].key} key={this.state.members[1].key}\n                    data-lity-target={this.state.members[1].imgUrl}\n                    data-lity-desc={'\" data-lity-close junk=\"'}\n                    style={{\n                      backgroundColor: 'gray',\n                      background:\n                          'url(\"' + this.state.members[1].imgUrl + '\") no-repeat center center',\n                      backgroundSize: 'cover',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'space-between',\n                    }}\n                  >\n                  </div>\n              </div>\n            </div>\n            }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n            */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}